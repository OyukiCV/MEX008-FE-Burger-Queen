{"version":3,"sources":["components/sidebar/HeaderToolbar.jsx","components/sidebar/Sidebar.jsx","components/MenuItem/index.jsx","components/Menu/index.jsx","views/MenuView/index.jsx","views/whitRouter.jsx","components/Table/TableState.jsx","components/Table/AllTables.jsx","views/TableSelectorView/index.jsx","components/FoodItem/index.jsx","components/Food/index.jsx","views/MenuItemView/index.jsx","App.js","serviceWorker.js","index.js"],"names":["DrawerToggleButton","props","className","onClick","click","header","drawerClickHandler","SideDrawer","drawerClasses","show","join","to","Backdrop","toolbar","state","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backdropClickHandler","backdrop","this","style","height","HeaderToolbar","Component","MenuItem","component","item","src","process","REACT_APP_PATH_IMAGES","icon","pathname","route","key","id","alt","Menu","icons","map","element","MenuView","IconMenu","Sidebar","WhitRouter","console","log","location","React","withRouter","TableList","changeColorGreen","changeColor","x","backgroundColor","number","AllTables","selectTables","FoodItem","iconItem","filter","i","type","name","Food","MenuItemView","data","DataMenu","App","routes","RouteJSON","basename","window","exact","path","Tables","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ca5acbcc.chunk.js","sourcesContent":["import React from 'react';\nimport './Style.scss';\n\nconst DrawerToggleButton = props => (\n  <button className=\"toggle-button\" onClick={props.click}> \n    <div className=\"toggle-button__line\"/>\n    <div className=\"toggle-button__line\"/>\n    <div className=\"toggle-button__line\"/> \n  </button>\n);\n\nconst header = props => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar__navigation\">\n      <div> \n        <DrawerToggleButton click={props.drawerClickHandler}/>\n      </div>\n    </nav>\n  </header>\n);\n\nexport default header;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Style.scss';\nimport HeaderToolbar from './HeaderToolbar.jsx'\n\n\nconst SideDrawer = props => {\n  let drawerClasses = ['side-drawer'];\n  if(props.show){\n    drawerClasses = ['side-drawer open'];\n  }\n  return (\n    <nav className={drawerClasses.join('')}>\n       <ul>\n         <li><Link to={'/'}>Mesas</Link></li>\n         <li><Link to={'/HistorialDePago'}>Historial de Pago</Link></li>\n         <li><Link to={'/Extras'}>Extras</Link></li>\n       </ul>\n     </nav>\n    );\n};\n\n\nconst Backdrop = props => (\n  <div className=\"backdrop\" onClick = {props.click}/>\n);\n\n\nclass toolbar extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n     this.setState((prevState) => {\n       return{sideDrawerOpen: !prevState.sideDrawerOpen}\n     });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n    render() {\n      let backdrop;\n      if(this.state.sideDrawerOpen){\n        backdrop = <Backdrop click={this.backdropClickHandler}/>;\n      }\n      return (\n        <div style={{height: '100%'}}>\n        <HeaderToolbar  drawerClickHandler={this.drawerToggleClickHandler}/>\n        <SideDrawer show={this.state.sideDrawerOpen}/>\n        {backdrop}\n        </div>  \n      )\n    }\n  }\n\n\nexport default toolbar;\n\n\n\n\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './styles.css'\n\n\nclass MenuItem extends Component {\n    render(){\n        const component = this.props.item.component;\n             \n        const src = (process.env.REACT_APP_PATH_IMAGES ? process.env.REACT_APP_PATH_IMAGES: '/MEX008-FE-Burger-Queen')+ (this.props.item  && this.props.item.icon);\n        return(\n            <Link to={{pathname: this.props.item.route, state: {component}}}>\n                <button className=\"cuadro\" key={this.props.item.id}>\n                    <img className=\"iconFood\" src={src} alt={this.props.item.id}/>{this.props.item.id}</button>\n            </Link>\n        );\n    }\n}\n\n\nexport default MenuItem;","import React, {Component} from 'react';\nimport MenuItem  from '../MenuItem/index';\n\nclass Menu extends Component {\n    render(){\n        return(\n                this.props.icons.map((element) => \n                <MenuItem item={element}/>)\n        );\n}}\n\nexport default Menu;","import React, {Component} from 'react';\nimport IconMenu from '../../components/Menu/icon.json';\nimport Data from '../../components/Menu/data.json';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport Menu from '../../components/Menu/index';\nimport '../TableSelectorView/Style.css';\n\nclass MenuView extends Component {\n    state = {\n        icon : IconMenu,\n\n    }\n    render(){\n        return(\n            <section>\n                <Sidebar/>\n                <h1 className=\"title\">Menu</h1>\n                <main className=\"container\">\n                    <div className=\"container-food\">\n                        <Menu icons={this.state.icon}/>\n                    </div>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default MenuView;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport MenuView from '../views/MenuView/index'\n\n\nclass WhitRouter extends React.Component {\n    render(){\n        console.log(this.props.location.pathname)\n        switch(this.props.location.pathname){\n            case '/Menu':\n                return(<MenuView/>)\n            case '/burgers':\n                return (<p>burgers</p>)\n            case '/hotdogs':\n                return (<p>hotdogs</p>)\n            case '/pizzas':\n                return(<p>pizzas</p>)\n            case '/ensaladas':\n                return(<p>salads</p>)\n            case '/postres':\n                return(<p>desserts</p>)\n            case '/sodas':\n                return(<p>drinks</p>)\n            case '/malteadas':\n                return(<p>malteadas</p>)\n            default:\n                return (<p>404</p>) \n        }\n        \n    }\n}\n\nexport default withRouter(WhitRouter);","import React from 'react';\nimport './Style.scss';\nimport {Link} from 'react-router-dom';\n\n\nclass TableList extends React.Component{\n   state ={\n       changeColorGreen: true\n   }\n   changeColor = (x)=>{\n       this.setState({changeColorGreen: !this.state.changeColorGreen})\n      \n   }\n   render(){\n       if(this.state.changeColorGreen){\n           return(\n               <Link to=\"/Menu\"><button style={{backgroundColor: (this.state.changeColorGreen) ? '#C4C4C4' : \"#42FF00\"}}\n               onClick={this.changeColor}>\n              {this.props.number}\n              </button></Link>\n           )\n       }\n       else{\n           return(\n               <button style={{backgroundColor: (this.state.changeColorGreen) ? '#C4C4C4' : \"#42FF00\"}} onClick={this.changeColor}>{this.props.number}\n               </button>\n           )\n       }\n    }\n}\nexport default TableList;","import React from 'react';\n/* import HelpButton from './helpButton/HelpButton' */\nimport TableList from './TableState';\nimport './Style.scss';\n\nfunction AllTables(){\n    return(\n        <div className = \"allTables\">\n        <div className = \"tablesOrder\">\n            <TableList number =\"3\"/>\n            <TableList number =\"4\"/>\n       </div>\n        <div className = \"tablesOrder\">\n            <TableList number = \"6\"/>\n            <TableList number = \"7\"/>\n            <TableList number = \"8\"/>\n            <TableList number = \"9\"/>\n            <TableList number = \"10\"/>\n         </div>\n         <div className = \"tablesOrder\">\n            <TableList number = \"1\"/>\n            <TableList number = \"2\"/>\n       </div>\n       <div className = \"tablesOrder\">\n            <TableList number =\"5\"/>\n       </div>\n       <div className = \"tablesOrder\">\n            <TableList number = \"11\"/>\n            <TableList number = \"12\"/>\n            <TableList number = \"13\"/>\n            <TableList number = \"14\"/>\n           </div>\n           </div>\n    )\n}\nexport default AllTables;","import React from 'react';\nimport AllTables from '../../components/Table/AllTables';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport './Style.css';\n\n\n\nclass selectTables extends React.Component {\nrender (){\n    return (\n    <section>\n        <Sidebar />\n        <h1 className=\"title\">Mesas</h1>\n        <AllTables />\n    </section>\n    );\n\n}\n}\nexport default selectTables;","import React, {Component} from 'react';\nimport '../MenuItem/styles.css';\n\nclass FoodItem extends Component {\n    render(){\n        const {icons} = this.props\n        console.log(icons)\n        const iconItem = icons.filter(i => {\n            console.log(`icons id:${i.id}|item: ${this.props.item.type}`)\n        return i.id ===  this.props.item.type\n        })[0];\n        const src = (process.env.REACT_APP_PATH_IMAGES ? process.env.REACT_APP_PATH_IMAGES: '/MEX008-FE-Burger-Queen')+ (iconItem  && iconItem.icon);\n        return(\n            <button className=\"cuadro\" >\n                <img className=\"iconFood\"\n                src={src}\n                alt={this.props.item.name}\n                />\n                {this.props.item.name} \n            </button>\n        );\n    }\n}\n\nexport default FoodItem;\n","import React, {Component} from 'react';\nimport FoodItem  from '../FoodItem/index';\n\nclass Food extends Component {\n    render(){\n        return(\n            this.props.name.map((element) =>\n            <FoodItem item={element} icons={this.props.icons}/>)   \n        );\n}}\n /*const hamburgers = this.props.name.filter((element) => {\n            return element.type === 'hamburgers'\n        })\n        return(\n            hamburgers.map((element) =>\n            <FoodItem item={element} icons={this.props.icons}/>)   \n        ); */\nexport default Food\n\n","import React, {Component} from 'react';\nimport IconMenu from '../../components/Menu/icon.json';\nimport DataMenu from '../../components/Menu/data.json';\nimport Food from '../../components/Food/index';\nimport Sidebar from '../../components/sidebar/Sidebar';\n\nclass MenuItemView extends Component {\n    state = {\n        icon : IconMenu,\n        data : DataMenu\n    }\n    render(){\n        return(\n            <section>\n                <Sidebar/>\n                <h1 className='title'></h1>\n                <main className=\"container\">\n                    <div className=\"container-food\">\n                        <Food icons={this.state.icon} name={this.state.data} />\n                    </div>\n                </main>\n            </section>\n        )\n    }\n}\n\nexport default MenuItemView;","import React, {Component} from 'react';\n\n// Home\n\nimport WhitRouter from './views/whitRouter'\nimport RouteJSON from './components/Menu/icon.json';\nimport Tables from './views/TableSelectorView/index';\nimport Menu from './views/MenuItemView/index';\n\n\n\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\n//Component\nclass App extends Component {\n\n    state = {\n        routes : RouteJSON\n    }\n    render(){\n        return(\n            <Router basename={window.location.pathname || ''}>\n                <Switch>\n                    <Route exact path='/' component={Tables} />\n                     <Route exact path={this.state.routes.route} component={WhitRouter} />\n                    {/*<Route exact path={this.state.routes.route} component={Prueba2}/>*/}\n                   \n                    <Route exact path='/menu' component={Menu} />\n\n                </Switch>\n            </Router>\n        )\n    };\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  } else {\n    console.log('wont register sw. Current env:', process.env.NODE_ENV);\n    \n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n\n      console.log('sw is registered');\n      \n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker.js';\n\n\n//import './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n// import Toolbar from './components/sidebar/toolbar/Toolbar.js';\n// ReactDOM.render(<Toolbar />, document.getElementById('root'));\n\n"],"sourceRoot":""}