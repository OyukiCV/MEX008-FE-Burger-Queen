{"version":3,"sources":["components/sidebar/HeaderToolbar.jsx","components/sidebar/Sidebar.jsx","components/MenuItem/index.jsx","components/Menu/index.jsx","views/MenuView/index.jsx","views/whitRouter.jsx","components/Table/TableState.jsx","components/Table/AllTables.jsx","views/TableSelectorView/index.jsx","App.js","serviceWorker.js","index.js"],"names":["DrawerToggleButton","props","className","onClick","click","header","drawerClickHandler","SideDrawer","drawerClasses","show","join","to","Backdrop","toolbar","state","sideDrawerOpen","drawerToggleClickHandler","setState","prevState","backdropClickHandler","backdrop","this","style","height","HeaderToolbar","Component","MenuItem","component","item","pathname","route","key","id","src","icon","alt","Menu","icons","map","element","MenuView","IconMenu","data","Data","Sidebar","WhitRouter","console","log","location","React","withRouter","TableList","changeColorGreen","changeColor","x","backgroundColor","number","AllTables","selectTables","App","routes","RouteJSON","basename","window","exact","path","Tables","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.194bc888.chunk.js","sourcesContent":["import React from 'react';\nimport './Style.scss';\n\nconst DrawerToggleButton = props => (\n  <button className=\"toggle-button\" onClick={props.click}> \n    <div className=\"toggle-button__line\"/>\n    <div className=\"toggle-button__line\"/>\n    <div className=\"toggle-button__line\"/> \n  </button>\n);\n\nconst header = props => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar__navigation\">\n      <div> \n        <DrawerToggleButton click={props.drawerClickHandler}/>\n      </div>\n    </nav>\n  </header>\n);\n\nexport default header;","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Style.scss';\nimport HeaderToolbar from './HeaderToolbar.jsx'\n\n\nconst SideDrawer = props => {\n  let drawerClasses = ['side-drawer'];\n  if(props.show){\n    drawerClasses = ['side-drawer open'];\n  }\n  return (\n    <nav className={drawerClasses.join('')}>\n       <ul>\n         <li><Link to={'/'}>Mesas</Link></li>\n         <li><Link to={'/HistorialDePago'}>Historial de Pago</Link></li>\n         <li><Link to={'/Extras'}>Extras</Link></li>\n       </ul>\n     </nav>\n    );\n};\n\n\nconst Backdrop = props => (\n  <div className=\"backdrop\" onClick = {props.click}/>\n);\n\n\nclass toolbar extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n     this.setState((prevState) => {\n       return{sideDrawerOpen: !prevState.sideDrawerOpen}\n     });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({sideDrawerOpen: false});\n  };\n    render() {\n      let backdrop;\n      if(this.state.sideDrawerOpen){\n        backdrop = <Backdrop click={this.backdropClickHandler}/>;\n      }\n      return (\n        <div style={{height: '100%'}}>\n        <HeaderToolbar  drawerClickHandler={this.drawerToggleClickHandler}/>\n        <SideDrawer show={this.state.sideDrawerOpen}/>\n        {backdrop}\n        </div>  \n      )\n    }\n  }\n\n\nexport default toolbar;\n\n\n\n\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport './styles.css'\n\n\nclass MenuItem extends Component {\n    render(){\n        const component = this.props.item.component;\n        return(\n            <Link to={{pathname: this.props.item.route, state: {component}}}><button className=\"cuadro\" key={this.props.item.id}><img className=\"iconFood\" src={this.props.item.icon} alt={this.props.item.id}/>{this.props.item.id}</button></Link>\n        );\n    }\n}\n\n\nexport default MenuItem;","import React, {Component} from 'react';\nimport MenuItem  from '../MenuItem/index';\n\nclass Menu extends Component {\n    render(){\n        return(\n                this.props.icons.map((element) => \n                <MenuItem item={element}/>)\n        );\n}}\n\nexport default Menu;","import React, {Component} from 'react';\nimport IconMenu from '../../components/Menu/icon.json';\nimport Data from '../../components/Menu/data.json';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport Menu from '../../components/Menu/index';\nimport '../TableSelectorView/Style.css';\n\nclass MenuView extends Component {\n    state = {\n        icon : IconMenu,\n        data : Data\n    }\n    render(){\n        return(\n            <section>\n            <Sidebar/>\n            <h1 className=\"title\">Menu</h1>\n            <main className=\"container\">\n                <div className=\"container-food\">\n                    <Menu icons={this.state.icon} />\n                </div>\n            </main>\n            </section>\n        );\n    }\n}\n\nexport default MenuView;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport MenuView from '../views/MenuView/index'\n\nclass WhitRouter extends React.Component {\n    render(){\n        console.log(this.props.location.pathname)\n        switch(this.props.location.pathname){\n            case '/Menu':\n                return(<MenuView/>)\n            case '/burgers':\n                return (<p>burgers</p>)\n            case '/hotdogs':\n                return (<p>hotdogs</p>)\n            case '/pizzas':\n                return(<p>pizzas</p>)\n            case '/salads':\n                return(<p>salads</p>)\n            case '/desserts':\n                return(<p>desserts</p>)\n            case '/drinks':\n                return(<p>drinks</p>)\n            default:\n                return (<p>404</p>) \n        }\n        \n    }\n}\n\nexport default withRouter(WhitRouter);","import React from 'react';\nimport './Style.scss';\nimport {Link} from 'react-router-dom';\n\n\nclass TableList extends React.Component{\n   state ={\n       changeColorGreen: true\n   }\n   changeColor = (x)=>{\n       this.setState({changeColorGreen: !this.state.changeColorGreen})\n      \n   }\n   render(){\n       if(this.state.changeColorGreen){\n           return(\n               <Link to=\"/Menu\"><button style={{backgroundColor: (this.state.changeColorGreen) ? '#C4C4C4' : \"#42FF00\"}}\n               onClick={this.changeColor}>\n              {this.props.number}\n              </button></Link>\n           )\n       }\n       else{\n           return(\n               <button style={{backgroundColor: (this.state.changeColorGreen) ? '#C4C4C4' : \"#42FF00\"}} onClick={this.changeColor}>{this.props.number}\n               </button>\n           )\n       }\n    }\n}\nexport default TableList;","import React from 'react';\n/* import HelpButton from './helpButton/HelpButton' */\nimport TableList from './TableState';\nimport './Style.scss';\n\nfunction AllTables(){\n    return(\n        <div className = \"allTables\">\n        <div className = \"tablesOrder\">\n            <TableList number =\"3\"/>\n            <TableList number =\"4\"/>\n       </div>\n        <div className = \"tablesOrder\">\n            <TableList number = \"6\"/>\n            <TableList number = \"7\"/>\n            <TableList number = \"8\"/>\n            <TableList number = \"9\"/>\n            <TableList number = \"10\"/>\n         </div>\n         <div className = \"tablesOrder\">\n            <TableList number = \"1\"/>\n            <TableList number = \"2\"/>\n       </div>\n       <div className = \"tablesOrder\">\n            <TableList number =\"5\"/>\n       </div>\n       <div className = \"tablesOrder\">\n            <TableList number = \"11\"/>\n            <TableList number = \"12\"/>\n            <TableList number = \"13\"/>\n            <TableList number = \"14\"/>\n           </div>\n           </div>\n    )\n}\nexport default AllTables;","import React from 'react';\nimport AllTables from '../../components/Table/AllTables';\nimport Sidebar from '../../components/sidebar/Sidebar';\nimport './Style.css';\n\n\n\nclass selectTables extends React.Component {\nrender (){\n    return (\n    <section>\n        <Sidebar />\n        <h1 className=\"title\">Mesas</h1>\n        <AllTables />\n    </section>\n    );\n\n}\n}\nexport default selectTables;","import React, {Component} from 'react';\n\n// Home\n\nimport WhitRouter from './views/whitRouter'\nimport RouteJSON from './components/Menu/icon.json';\nimport Tables from './views/TableSelectorView/index';\nimport Menu from './views/MenuView/index';\n// import CustomContainer from './components/Custom/CustomContainer';\n\n\n\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\n//Component\nclass App extends Component {\n\n    state = {\n        routes : RouteJSON\n    }\n    render(){\n        return(\n            <Router basename={window.location.pathname || ''}>\n                <Switch>\n                    <Route exact path='/' component={Tables} />\n                     <Route exact path={this.state.routes.route} component={WhitRouter} />\n                    {/*<Route exact path={this.state.routes.route} component={Prueba2}/>*/}\n                   \n                    <Route exact path='/menu' component={Menu} />\n\n                </Switch>\n            </Router>\n        )\n    };\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker.js';\n\n\n//import './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// import Toolbar from './components/sidebar/toolbar/Toolbar.js';\n// ReactDOM.render(<Toolbar />, document.getElementById('root'));\n\n"],"sourceRoot":""}